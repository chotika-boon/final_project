import streamlit as st
import pandas as pd

def show_register():
    df = pd.read_csv("credit_card.csv")

    # --------- ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏° State ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å ---------
    if "selected_bank" not in st.session_state:
        st.session_state.selected_bank = df["‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£"].dropna().unique()[0]
    if "selected_product" not in st.session_state:
        st.session_state.selected_product = None

    st.markdown("<h2 style='text-align:center;'>‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å</h2>", unsafe_allow_html=True)

    with st.form("register_form"):
        # ---------------- ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ ----------------
        col1, col2 = st.columns(2)
        with col1:
            username = st.text_input("‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ")
        with col2:
            email = st.text_input("‡∏≠‡∏µ‡πÄ‡∏°‡∏•")

        col1, col2 = st.columns(2)
        with col1:
            password = st.text_input("‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô", type="password")
        with col2:
            confirm_password = st.text_input("‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô", type="password")

        # ---------------- Dropdown 1: ‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£ ----------------
        bank_options = sorted(df["‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£"].dropna().unique())
        selected_bank = st.selectbox(
            "üè¶ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£",
            options=bank_options,
            index=bank_options.index(st.session_state.selected_bank) if st.session_state.selected_bank in bank_options else 0,
            key="selected_bank"
        )

        # ---------------- Dropdown 2: ‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏ï‡∏£ ----------------
        product_df = df[df["‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£"] == st.session_state.selected_bank]
        product_options = sorted(product_df["‡∏ú‡∏•‡∏¥‡∏ï‡∏†‡∏±‡∏ì‡∏ë‡πå/‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏ï‡∏£"].dropna().unique())

        if st.session_state.selected_product not in product_options:
            st.session_state.selected_product = product_options[0] if product_options else None

        selected_product = st.selectbox(
            "üí≥ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏ï‡∏£",
            options=product_options,
            index=product_options.index(st.session_state.selected_product) if st.session_state.selected_product in product_options else 0,
            key="selected_product"
        )

        # ---------------- Dropdown 3: ‡∏ú‡∏π‡πâ‡∏≠‡∏≠‡∏Å‡∏ö‡∏±‡∏ï‡∏£ ----------------
        issuer_df = product_df[product_df["‡∏ú‡∏•‡∏¥‡∏ï‡∏†‡∏±‡∏ì‡∏ë‡πå/‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏ï‡∏£"] == st.session_state.selected_product]
        issuer_options = sorted(issuer_df["‡∏ú‡∏π‡πâ‡∏≠‡∏≠‡∏Å‡∏ö‡∏±‡∏ï‡∏£"].dropna().unique())
        selected_issuer = st.selectbox("üè¢ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ú‡∏π‡πâ‡∏≠‡∏≠‡∏Å‡∏ö‡∏±‡∏ï‡∏£", options=issuer_options)

        # ---------------- Submit ----------------
        submitted = st.form_submit_button("‚úÖ ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å")

        if submitted:
            if not username or not email or not password:
                st.warning("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô")
            elif password != confirm_password:
                st.error("‚ùå ‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô")
            else:
                st.success("‚úÖ ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏Ñ‡∏∏‡∏ì üéâ")
                st.session_state.page = "login"
                st.rerun()

    # ---------------- ‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö ----------------
    if st.button("‡∏°‡∏µ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß? ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö"):
        st.session_state.page = "login"
        st.rerun()
