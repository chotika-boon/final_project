import streamlit as st
import pandas as pd

def show_register():
    # --------- ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ---------
    df = pd.read_csv("credit_card.csv")

    # --------- CSS ‡∏™‡πÑ‡∏ï‡∏•‡πå MODERN ---------
    st.markdown("""
    <style>
        .register-box {
            max-width: 500px;
            margin: 2rem auto;
            padding: 2rem;
            background-color: #ffffff;
            border-radius: 12px;
            box-shadow: 0px 4px 12px rgba(0,0,0,0.1);
        }

        .register-title {
            text-align: center;
            font-size: 26px;
            font-weight: bold;
            margin-bottom: 1.5rem;
        }

        .input-label {
            font-size: 16px;
            margin-top: 1rem;
        }

        .icon {
            font-size: 20px;
            margin-right: 8px;
        }

        .form-footer {
            margin-top: 1.5rem;
            text-align: center;
        }

        .divider {
            text-align: center;
            margin: 1.5rem 0;
            color: #888;
        }

    </style>
    """, unsafe_allow_html=True)

    st.markdown("<div class='register-box'>", unsafe_allow_html=True)
    st.markdown("<div class='register-title'>üìù ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å</div>", unsafe_allow_html=True)

    # --------- ‡∏ü‡∏≠‡∏£‡πå‡∏° (‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ/‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô) ---------
    with st.form("user_register_form"):
        st.markdown("#### üë§ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ")

        username = st.text_input("‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ")
        password = st.text_input("‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô", type="password")
        confirm_password = st.text_input("‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô", type="password")

        submitted = st.form_submit_button("‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å")

        if submitted:
            if password != confirm_password:
                st.error("‚ùå ‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô")
            else:
                st.success("‚úÖ ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß!")
                st.session_state.page = "login"
                st.rerun()

    # --------- Divider ---------
    st.markdown("<div class='divider'>‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏±‡∏ï‡∏£</div>", unsafe_allow_html=True)

    # --------- Dropdown ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏Å‡∏±‡∏ô 3 ‡∏ä‡∏±‡πâ‡∏ô ---------
    st.markdown("#### üí≥ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏±‡∏ï‡∏£‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï")

    bank_options = sorted(df["‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£"].dropna().unique())
    selected_bank = st.selectbox("üè¶ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£", bank_options)

    product_df = df[df["‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£"] == selected_bank]
    product_options = sorted(product_df["‡∏ú‡∏•‡∏¥‡∏ï‡∏†‡∏±‡∏ì‡∏ë‡πå/‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏ï‡∏£"].dropna().unique())
    selected_product = st.selectbox("üí≥ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏ï‡∏£", product_options)

    issuer_df = product_df[product_df["‡∏ú‡∏•‡∏¥‡∏ï‡∏†‡∏±‡∏ì‡∏ë‡πå/‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏ï‡∏£"] == selected_product]
    issuer_options = sorted(issuer_df["‡∏ú‡∏π‡πâ‡∏≠‡∏≠‡∏Å‡∏ö‡∏±‡∏ï‡∏£"].dropna().unique())
    selected_issuer = st.selectbox("üè¢ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ú‡∏π‡πâ‡∏≠‡∏≠‡∏Å‡∏ö‡∏±‡∏ï‡∏£", issuer_options)

    # --------- ‡∏õ‡∏∏‡πà‡∏°‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö ---------
    st.markdown("""
        <div class='form-footer'>
            <a href="#" onclick="window.location.reload();">
                <button style="background: none; border: none; color: #0084ff; font-size: 15px; cursor: pointer;">
                    üîô ‡∏°‡∏µ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß? ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö
                </button>
            </a>
        </div>
    """, unsafe_allow_html=True)

    st.markdown("</div>", unsafe_allow_html=True)  # ‡∏õ‡∏¥‡∏î box
import streamlit as st
import pandas as pd

def show_register():
    # --------- ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ---------
    df = pd.read_csv("credit_card.csv")

    # --------- CSS ‡∏™‡πÑ‡∏ï‡∏•‡πå MODERN ---------
    st.markdown("""
    <style>
        .register-box {
            max-width: 500px;
            margin: 2rem auto;
            padding: 2rem;
            background-color: #ffffff;
            border-radius: 12px;
            box-shadow: 0px 4px 12px rgba(0,0,0,0.1);
        }

        .register-title {
            text-align: center;
            font-size: 26px;
            font-weight: bold;
            margin-bottom: 1.5rem;
        }

        .input-label {
            font-size: 16px;
            margin-top: 1rem;
        }

        .icon {
            font-size: 20px;
            margin-right: 8px;
        }

        .form-footer {
            margin-top: 1.5rem;
            text-align: center;
        }

        .divider {
            text-align: center;
            margin: 1.5rem 0;
            color: #888;
        }

    </style>
    """, unsafe_allow_html=True)

    st.markdown("<div class='register-box'>", unsafe_allow_html=True)
    st.markdown("<div class='register-title'>üìù ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å</div>", unsafe_allow_html=True)

    # --------- ‡∏ü‡∏≠‡∏£‡πå‡∏° (‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ/‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô) ---------
    with st.form("user_register_form"):
        st.markdown("#### üë§ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ")

        username = st.text_input("‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ")
        password = st.text_input("‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô", type="password")
        confirm_password = st.text_input("‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô", type="password")

        submitted = st.form_submit_button("‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å")

        if submitted:
            if password != confirm_password:
                st.error("‚ùå ‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô")
            else:
                st.success("‚úÖ ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß!")
                st.session_state.page = "login"
                st.rerun()

    # --------- Divider ---------
    st.markdown("<div class='divider'>‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏±‡∏ï‡∏£</div>", unsafe_allow_html=True)

    # --------- Dropdown ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏Å‡∏±‡∏ô 3 ‡∏ä‡∏±‡πâ‡∏ô ---------
    st.markdown("#### üí≥ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏±‡∏ï‡∏£‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï")

    bank_options = sorted(df["‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£"].dropna().unique())
    selected_bank = st.selectbox("üè¶ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£", bank_options)

    product_df = df[df["‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£"] == selected_bank]
    product_options = sorted(product_df["‡∏ú‡∏•‡∏¥‡∏ï‡∏†‡∏±‡∏ì‡∏ë‡πå/‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏ï‡∏£"].dropna().unique())
    selected_product = st.selectbox("üí≥ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏ï‡∏£", product_options)

    issuer_df = product_df[product_df["‡∏ú‡∏•‡∏¥‡∏ï‡∏†‡∏±‡∏ì‡∏ë‡πå/‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏ï‡∏£"] == selected_product]
    issuer_options = sorted(issuer_df["‡∏ú‡∏π‡πâ‡∏≠‡∏≠‡∏Å‡∏ö‡∏±‡∏ï‡∏£"].dropna().unique())
    selected_issuer = st.selectbox("üè¢ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ú‡∏π‡πâ‡∏≠‡∏≠‡∏Å‡∏ö‡∏±‡∏ï‡∏£", issuer_options)

    # --------- ‡∏õ‡∏∏‡πà‡∏°‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö ---------
    st.markdown("""
        <div class='form-footer'>
            <a href="#" onclick="window.location.reload();">
                <button style="background: none; border: none; color: #0084ff; font-size: 15px; cursor: pointer;">
                    üîô ‡∏°‡∏µ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß? ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö
                </button>
            </a>
        </div>
    """, unsafe_allow_html=True)

    st.markdown("</div>", unsafe_allow_html=True)  # ‡∏õ‡∏¥‡∏î box
import streamlit as st
import pandas as pd

def show_register():
    # --------- ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ---------
    df = pd.read_csv("credit_card.csv")

    # --------- CSS ‡∏™‡πÑ‡∏ï‡∏•‡πå MODERN ---------
    st.markdown("""
    <style>
        .register-box {
            max-width: 500px;
            margin: 2rem auto;
            padding: 2rem;
            background-color: #ffffff;
            border-radius: 12px;
            box-shadow: 0px 4px 12px rgba(0,0,0,0.1);
        }

        .register-title {
            text-align: center;
            font-size: 26px;
            font-weight: bold;
            margin-bottom: 1.5rem;
        }

        .input-label {
            font-size: 16px;
            margin-top: 1rem;
        }

        .icon {
            font-size: 20px;
            margin-right: 8px;
        }

        .form-footer {
            margin-top: 1.5rem;
            text-align: center;
        }

        .divider {
            text-align: center;
            margin: 1.5rem 0;
            color: #888;
        }

    </style>
    """, unsafe_allow_html=True)

    st.markdown("<div class='register-box'>", unsafe_allow_html=True)
    st.markdown("<div class='register-title'>üìù ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å</div>", unsafe_allow_html=True)

    # --------- ‡∏ü‡∏≠‡∏£‡πå‡∏° (‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ/‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô) ---------
    with st.form("user_register_form"):
        st.markdown("#### üë§ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ")

        username = st.text_input("‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ")
        password = st.text_input("‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô", type="password")
        confirm_password = st.text_input("‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô", type="password")

        submitted = st.form_submit_button("‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å")

        if submitted:
            if password != confirm_password:
                st.error("‚ùå ‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô")
            else:
                st.success("‚úÖ ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß!")
                st.session_state.page = "login"
                st.rerun()

    # --------- Divider ---------
    st.markdown("<div class='divider'>‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏±‡∏ï‡∏£</div>", unsafe_allow_html=True)

    # --------- Dropdown ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏Å‡∏±‡∏ô 3 ‡∏ä‡∏±‡πâ‡∏ô ---------
    st.markdown("#### üí≥ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏±‡∏ï‡∏£‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï")

    bank_options = sorted(df["‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£"].dropna().unique())
    selected_bank = st.selectbox("üè¶ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£", bank_options)

    product_df = df[df["‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£"] == selected_bank]
    product_options = sorted(product_df["‡∏ú‡∏•‡∏¥‡∏ï‡∏†‡∏±‡∏ì‡∏ë‡πå/‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏ï‡∏£"].dropna().unique())
    selected_product = st.selectbox("üí≥ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏ï‡∏£", product_options)

    issuer_df = product_df[product_df["‡∏ú‡∏•‡∏¥‡∏ï‡∏†‡∏±‡∏ì‡∏ë‡πå/‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏ï‡∏£"] == selected_product]
    issuer_options = sorted(issuer_df["‡∏ú‡∏π‡πâ‡∏≠‡∏≠‡∏Å‡∏ö‡∏±‡∏ï‡∏£"].dropna().unique())
    selected_issuer = st.selectbox("üè¢ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ú‡∏π‡πâ‡∏≠‡∏≠‡∏Å‡∏ö‡∏±‡∏ï‡∏£", issuer_options)

    # --------- ‡∏õ‡∏∏‡πà‡∏°‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö ---------
    st.markdown("""
        <div class='form-footer'>
            <a href="#" onclick="window.location.reload();">
                <button style="background: none; border: none; color: #0084ff; font-size: 15px; cursor: pointer;">
                    üîô ‡∏°‡∏µ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß? ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö
                </button>
            </a>
        </div>
    """, unsafe_allow_html=True)

    st.markdown("</div>", unsafe_allow_html=True)  # ‡∏õ‡∏¥‡∏î box
