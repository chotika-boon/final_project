import streamlit as st
import pandas as pd

def show_register():
    df = pd.read_csv("credit_card.csv")

    # üéØ Session state ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏° dropdown link
    if "selected_bank" not in st.session_state:
        st.session_state.selected_bank = None
    if "selected_product" not in st.session_state:
        st.session_state.selected_product = None
    if "selected_issuer" not in st.session_state:
        st.session_state.selected_issuer = None

    st.markdown("<h2 style='text-align:center;'>‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å</h2>", unsafe_allow_html=True)

    with st.form("register_form"):
        # ---------------- üßë‚Äçüíº ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ ----------------
        col1, col2 = st.columns(2)
        with col1:
            username = st.text_input("‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ")
        with col2:
            email = st.text_input("‡∏≠‡∏µ‡πÄ‡∏°‡∏•")

        col1, col2 = st.columns(2)
        with col1:
            password = st.text_input("‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô", type="password")
        with col2:
            confirm_password = st.text_input("‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô", type="password")

        # ---------------- üí≥ ‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏ï‡∏£ ----------------
        product_options = sorted(df["‡∏ú‡∏•‡∏¥‡∏ï‡∏†‡∏±‡∏ì‡∏ë‡πå/‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏ï‡∏£"].dropna().unique())
        selected_product = st.selectbox(
            "üí≥ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏ï‡∏£",
            options=product_options,
            index=product_options.index(st.session_state.selected_product) if st.session_state.selected_product in product_options else 0,
            key="selected_product"
        )

        # ‚úîÔ∏è ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ß‡πâ‡πÉ‡∏ô session
        st.session_state.selected_product = selected_product

        # ---------------- üè¢ ‡∏ú‡∏π‡πâ‡∏≠‡∏≠‡∏Å‡∏ö‡∏±‡∏ï‡∏£ (‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏à‡∏≤‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏ï‡∏£) ----------------
        filtered_df = df[df["‡∏ú‡∏•‡∏¥‡∏ï‡∏†‡∏±‡∏ì‡∏ë‡πå/‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏ï‡∏£"] == selected_product]
        issuer_options = sorted(filtered_df["‡∏ú‡∏π‡πâ‡∏≠‡∏≠‡∏Å‡∏ö‡∏±‡∏ï‡∏£"].dropna().unique())

        # ‡πÉ‡∏´‡πâ‡∏Ñ‡πà‡∏≤ default ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÄ‡∏Ñ‡∏¢‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
        if st.session_state.selected_issuer not in issuer_options:
            st.session_state.selected_issuer = issuer_options[0] if issuer_options else None

        selected_issuer = st.selectbox(
            "üè¢ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ú‡∏π‡πâ‡∏≠‡∏≠‡∏Å‡∏ö‡∏±‡∏ï‡∏£",
            options=issuer_options,
            index=issuer_options.index(st.session_state.selected_issuer) if st.session_state.selected_issuer in issuer_options else 0,
            key="selected_issuer"
        )

        st.session_state.selected_issuer = selected_issuer

        # ---------------- ‚úÖ ‡∏õ‡∏∏‡πà‡∏°‡∏™‡∏°‡∏±‡∏Ñ‡∏£ ----------------
        submitted = st.form_submit_button("‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å")

        if submitted:
            if not username or not email or not password:
                st.warning("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö")
            elif password != confirm_password:
                st.error("‚ùå ‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô")
            else:
                st.success("‚úÖ ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! üéâ")
                st.session_state.page = "login"
                st.rerun()

    # ---------------- üîÅ ‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö ----------------
    if st.button("‡∏°‡∏µ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß? ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö"):
        st.session_state.page = "login"
        st.rerun()
